<?php

/**
 * @file
 * Module file for ezcontent_smart_article.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Ajax\AjaxResponse;
use Drupal\Core\Ajax\InvokeCommand;
use Drupal\file\Entity\File;
use Drupal\Component\Utility\Html;
use Drupal\Component\Serialization\Json;

/**
 * Implements hook_form_FORM_ID_alter().
 */
function ezcontent_smart_article_form_node_form_alter(&$form, FormStateInterface $form_state) {
  if (in_array($form['#form_id'], [
    'node_smart_article_edit_form',
    'node_smart_article_form',
  ])) {
    // Make Company name Autocomplete.
    $form['field_company_name']['widget'][0]['value']['#autocomplete_route_name'] = 'ezcontent_smart_article.autocomplete.companies';

    // Add a generate summary button and hide body field.
    $form['generate_summary'] = [
      '#type' => 'submit',
      '#name' => 'generate_summary',
      '#value' => t('Generate Summary'),
      '#weight' => 11,
      '#ajax' => [
        'callback' => 'ezcontent_smart_article_generate_callback',
        'wrapper' => 'form-summary-generate-wrapper',
        'effect' => 'fade',
        'event' => 'click',
        'progress' => [
          'type' => 'throbber',
          'message' => 'Please wait...',
        ],
      ],
    ];
    $form['#attached']['library'][] = 'ezcontent_smart_article/ezcontent_smart_article_libs';

    if (isset($form['body'])) {
      if ($form['body']['widget'][0]['#default_value'] == '') {
        $form['body']['#attributes']['class'][] = 'hide-body--field';
        $form['body']['#attributes']['style'] = 'display:none;';
      }
    }
    // Check if smart summary exist.
    if (isset($form['field_smart_text_summary']['widget'][0]['summary'])) {
      $form['field_smart_text_summary']['widget'][0]['number_of_sentences']['#states']  = [
        'visible' => [
          ':input[name="field_smart_text_summary[0][summary_type]"]' => ['value' => 'extractive'],
        ],
      ];
      $form['field_smart_text_summary']['widget'][0]['generate_smart_summary']['#ajax'] = [
        'callback' => 'ezcontent_smart_summary_generate_callback',
        'wrapper' => 'form-smart-summary-generate-wrapper',
        'effect' => 'fade',
        'event' => 'click',
        'progress' => [
          'type' => 'throbber',
          'message' => 'Please wait...',
        ],
      ];
    }
    // Add a process to field_company_logo.
    if (!empty($form['field_company_logo'])) {
      $form['field_company_logo']['widget'][0]['#process'][] = 'ezcontent_smart_article_get_alt_title';
    }

  }
}

/**
 * Summary generator callback.
 *
 * @todo: Move to a service.
 */
function ezcontent_smart_article_generate_callback(&$form, FormStateInterface $form_state) {
  $results = \Drupal::service('ezcontent_smart_article.companies_list');
  $company_name = $form_state->getValue('field_company_name')[0]['value'];
  $text = $results->getData($company_name, 'article');

  $response = new AjaxResponse();
  $arguments = [$text, 'edit-body-0-value'];
  $response->addCommand(new InvokeCommand(NULL, "update_text_editor", $arguments));
  $response->addCommand(new InvokeCommand('.hide-body--field', 'show'));
  return $response;
}

/**
 * Summary generator callback.
 *
 * @todo: Move to a service.
 */
function ezcontent_smart_summary_generate_callback(&$form, FormStateInterface $form_state) {
  $generate_summary = \Drupal::service('ezcontent_smart_article.generate_summary');
  $summary_type = $form_state->getValue('field_smart_text_summary')[0]['summary_type'];
  $number_of_sentences = $form_state->getValue('field_smart_text_summary')[0]['number_of_sentences'];
  $article = Html::decodeEntities(strip_tags($form_state->getValue('field_smart_text_summary')[0]['value']));
  $text = Json::decode($generate_summary->generateSummary($article, $summary_type, $number_of_sentences));
  $summary = $text['data']['data']['summary'];

  $response = new AjaxResponse();
  $arguments = [$summary, 'edit-field-smart-text-summary-0-summary'];
  $edit_summary_arguments = ['', '.link-edit-summary'];
  $response->addCommand(new InvokeCommand(NULL, "update_summary_text", $arguments));
  $response->addCommand(new InvokeCommand(NULL, 'update_edit_summary', $edit_summary_arguments));
  return $response;
}

/**
 * Process callback: Adds the ALT title to image.
 *
 * @todo: Move to a service.
 *
 * @param array $element
 *   Form API element.
 *
 * @return array $element
 */
function ezcontent_smart_article_get_alt_title(array $element, FormStateInterface $form_state, array &$form) {
  $item = $element['#value'];
  if (!empty($item['fids'])) {
    $file = File::load($item['fids'][0]);
    $image_file = file_get_contents(\Drupal::service('file_system')->realpath($file->getFileUri()));

    $url = \Drupal::config('summary_generator.settings')->get('image_captioning_api_url');
    $response = \Drupal::service('http_client')->request('POST', $url, [
      'headers' => [
        'content-type' => $file->getMimeType(),
      ],
      'body' => $image_file,
    ]);
    if ($response->getStatusCode() == 200) {
      $body = \Drupal::service('serialization.json')->decode($response->getBody()->getContents());
      $element['alt']['#default_value'] = $body['data']['caption'];
    }

  }
  return $element;
}
